  Reading Qt configuration (D:\MYAPP\QT\5.8\msvc2015_64\bin\qmake.exe)
  moc Netdemo.h
  moc Camerathread.h
  moc NetThread.h
  Camerathread.cpp
  HKIPcamera.cpp
  main.cpp
  Mstring.cpp
  Netdemo.cpp
HKIPcamera.cpp : warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
  NetThread.cpp
  ui_Netdemo.cpp
ui_Netdemo.cpp(2): error C2653: “Ui_Netdemo”: 不是类或命名空间名称
ui_Netdemo.cpp(4): error C2653: “QFontDatabase”: 不是类或命名空间名称
ui_Netdemo.cpp(4): error C3861: “addApplicationFont”: 找不到标识符
ui_Netdemo.cpp(6): error C2653: “QFontDatabase”: 不是类或命名空间名称
ui_Netdemo.cpp(6): error C3861: “applicationFontFamilies”: 找不到标识符
ui_Netdemo.cpp(18): error C2065: “main_widget”: 未声明的标识符
ui_Netdemo.cpp(19): error C2065: “main_widget”: 未声明的标识符
ui_Netdemo.cpp(19): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(19): note: 类型是“unknown-type”
ui_Netdemo.cpp(20): error C2065: “main_layout”: 未声明的标识符
ui_Netdemo.cpp(20): error C2061: 语法错误: 标识符“QGridLayout”
ui_Netdemo.cpp(21): error C2065: “main_layout”: 未声明的标识符
ui_Netdemo.cpp(21): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(21): note: 类型是“unknown-type”
ui_Netdemo.cpp(22): error C2065: “left_widget”: 未声明的标识符
ui_Netdemo.cpp(23): error C2065: “left_widget”: 未声明的标识符
ui_Netdemo.cpp(23): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(23): note: 类型是“unknown-type”
ui_Netdemo.cpp(24): error C2065: “left_layout”: 未声明的标识符
ui_Netdemo.cpp(24): error C2061: 语法错误: 标识符“QGridLayout”
ui_Netdemo.cpp(25): error C2065: “left_layout”: 未声明的标识符
ui_Netdemo.cpp(25): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(25): note: 类型是“unknown-type”
ui_Netdemo.cpp(26): error C2065: “right_widget”: 未声明的标识符
ui_Netdemo.cpp(27): error C2065: “right_widget”: 未声明的标识符
ui_Netdemo.cpp(27): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(27): note: 类型是“unknown-type”
ui_Netdemo.cpp(28): error C2065: “right_layout”: 未声明的标识符
ui_Netdemo.cpp(28): error C2061: 语法错误: 标识符“QGridLayout”
ui_Netdemo.cpp(29): error C2065: “right_layout”: 未声明的标识符
ui_Netdemo.cpp(29): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(29): note: 类型是“unknown-type”
ui_Netdemo.cpp(30): error C2065: “main_layout”: 未声明的标识符
ui_Netdemo.cpp(30): error C2227: “->addWidget”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(30): note: 类型是“unknown-type”
ui_Netdemo.cpp(30): error C2065: “left_widget”: 未声明的标识符
ui_Netdemo.cpp(31): error C2065: “main_layout”: 未声明的标识符
ui_Netdemo.cpp(31): error C2227: “->addWidget”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(31): note: 类型是“unknown-type”
ui_Netdemo.cpp(31): error C2065: “right_widget”: 未声明的标识符
ui_Netdemo.cpp(32): error C2065: “main_widget”: 未声明的标识符
ui_Netdemo.cpp(35): error C2065: “localaddress”: 未声明的标识符
ui_Netdemo.cpp(35): error C2027: 使用了未定义类型“QLineEdit”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qabstractspinbox.h(52): note: 参见“QLineEdit”的声明
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qabstractspinbox.h(52): note: 参见“QLineEdit”的声明 (编译源文件 ui_Netdemo.cpp)
ui_Netdemo.cpp(36): error C2065: “filepath”: 未声明的标识符
ui_Netdemo.cpp(36): error C2027: 使用了未定义类型“QLineEdit”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qabstractspinbox.h(52): note: 参见“QLineEdit”的声明
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qabstractspinbox.h(52): note: 参见“QLineEdit”的声明 (编译源文件 ui_Netdemo.cpp)
ui_Netdemo.cpp(37): error C2065: “localaddress”: 未声明的标识符
ui_Netdemo.cpp(37): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(37): note: 类型是“unknown-type”
ui_Netdemo.cpp(38): error C2065: “localaddress”: 未声明的标识符
ui_Netdemo.cpp(38): error C2227: “->setAlignment”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(38): note: 类型是“unknown-type”
ui_Netdemo.cpp(39): error C2065: “filepath”: 未声明的标识符
ui_Netdemo.cpp(39): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(39): note: 类型是“unknown-type”
ui_Netdemo.cpp(40): error C2065: “filepath”: 未声明的标识符
ui_Netdemo.cpp(40): error C2227: “->setAlignment”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(40): note: 类型是“unknown-type”
ui_Netdemo.cpp(41): error C2065: “localaddress”: 未声明的标识符
ui_Netdemo.cpp(41): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(41): note: 类型是“unknown-type”
ui_Netdemo.cpp(42): error C2065: “filepath”: 未声明的标识符
ui_Netdemo.cpp(42): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(42): note: 类型是“unknown-type”
ui_Netdemo.cpp(43): error C2065: “label1”: 未声明的标识符
ui_Netdemo.cpp(43): error C2061: 语法错误: 标识符“QLabel”
ui_Netdemo.cpp(44): error C2065: “label1”: 未声明的标识符
ui_Netdemo.cpp(44): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(44): note: 类型是“unknown-type”
ui_Netdemo.cpp(45): error C2065: “label2”: 未声明的标识符
ui_Netdemo.cpp(45): error C2061: 语法错误: 标识符“QLabel”
ui_Netdemo.cpp(46): error C2065: “label2”: 未声明的标识符
ui_Netdemo.cpp(46): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(46): note: 类型是“unknown-type”
ui_Netdemo.cpp(47): error C2065: “label3”: 未声明的标识符
ui_Netdemo.cpp(47): error C2061: 语法错误: 标识符“QLabel”
ui_Netdemo.cpp(48): error C2065: “label3”: 未声明的标识符
ui_Netdemo.cpp(48): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(48): note: 类型是“unknown-type”
ui_Netdemo.cpp(49): error C2065: “combo”: 未声明的标识符
ui_Netdemo.cpp(49): error C2027: 使用了未定义类型“QComboBox”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qmenu.h(271): note: 参见“QComboBox”的声明
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qmenu.h(271): note: 参见“QComboBox”的声明 (编译源文件 ui_Netdemo.cpp)
ui_Netdemo.cpp(53): error C2065: “combo”: 未声明的标识符
ui_Netdemo.cpp(53): error C2227: “->addItems”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(53): note: 类型是“unknown-type”
ui_Netdemo.cpp(54): error C2065: “start”: 未声明的标识符
ui_Netdemo.cpp(54): error C2061: 语法错误: 标识符“QPushButton”
ui_Netdemo.cpp(55): error C2065: “start”: 未声明的标识符
ui_Netdemo.cpp(55): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(55): note: 类型是“unknown-type”
ui_Netdemo.cpp(56): error C2065: “start”: 未声明的标识符
ui_Netdemo.cpp(56): error C2227: “->setStyleSheet”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(56): note: 类型是“unknown-type”
ui_Netdemo.cpp(61): error C2065: “label4”: 未声明的标识符
ui_Netdemo.cpp(61): error C2061: 语法错误: 标识符“QLabel”
ui_Netdemo.cpp(62): error C2065: “label4”: 未声明的标识符
ui_Netdemo.cpp(62): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(62): note: 类型是“unknown-type”
ui_Netdemo.cpp(63): error C2065: “label4”: 未声明的标识符
ui_Netdemo.cpp(63): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(63): note: 类型是“unknown-type”
ui_Netdemo.cpp(64): error C2065: “textsent”: 未声明的标识符
ui_Netdemo.cpp(64): error C2061: 语法错误: 标识符“QTextEdit”
ui_Netdemo.cpp(65): error C2065: “texttosent”: 未声明的标识符
ui_Netdemo.cpp(65): error C2027: 使用了未定义类型“QLineEdit”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qabstractspinbox.h(52): note: 参见“QLineEdit”的声明
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qabstractspinbox.h(52): note: 参见“QLineEdit”的声明 (编译源文件 ui_Netdemo.cpp)
ui_Netdemo.cpp(66): error C2065: “send”: 未声明的标识符
ui_Netdemo.cpp(66): error C2061: 语法错误: 标识符“QPushButton”
ui_Netdemo.cpp(66): error C2227: “->setFont”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(66): note: 类型是“unknown-type”
ui_Netdemo.cpp(66): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(66): note: 类型是“unknown-type”
ui_Netdemo.cpp(67): error C2065: “send”: 未声明的标识符
ui_Netdemo.cpp(67): error C2227: “->setObjectName”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(67): note: 类型是“unknown-type”
ui_Netdemo.cpp(68): error C2065: “send”: 未声明的标识符
ui_Netdemo.cpp(68): error C2227: “->setStyleSheet”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(68): note: 类型是“unknown-type”
ui_Netdemo.cpp(74): error C2065: “right_layout”: 未声明的标识符
ui_Netdemo.cpp(74): error C2227: “->addWidget”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(74): note: 类型是“unknown-type”
ui_Netdemo.cpp(74): error C2065: “localaddress”: 未声明的标识符
ui_Netdemo.cpp(75): error C2065: “right_layout”: 未声明的标识符
ui_Netdemo.cpp(75): error C2227: “->addWidget”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(75): note: 类型是“unknown-type”
ui_Netdemo.cpp(75): error C2065: “filepath”: 未声明的标识符
ui_Netdemo.cpp(76): error C2065: “right_layout”: 未声明的标识符
ui_Netdemo.cpp(76): error C2227: “->addWidget”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(76): note: 类型是“unknown-type”
ui_Netdemo.cpp(76): error C2065: “combo”: 未声明的标识符
ui_Netdemo.cpp(77): error C2065: “right_layout”: 未声明的标识符
ui_Netdemo.cpp(77): error C2227: “->addWidget”的左边必须指向类/结构/联合/泛型类型
  ui_Netdemo.cpp(77): note: 类型是“unknown-type”
ui_Netdemo.cpp(77): error C2065: “start”: 未声明的标识符
ui_Netdemo.cpp(77): fatal error C1003: 错误计数超过 100；正在停止编译
HKIPcamera.cpp(10): fatal error C1083: 无法打开包括文件: “HCNetSDK.h”: No such file or directory
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C3646: “ui”: 未知重写说明符 (编译源文件 Camerathread.cpp)
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C3646: “ui”: 未知重写说明符 (编译源文件 NetThread.cpp)
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int (编译源文件 Camerathread.cpp)
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int (编译源文件 NetThread.cpp)
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C3646: “ui”: 未知重写说明符 (编译源文件 main.cpp)
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int (编译源文件 main.cpp)
Camerathread.cpp(14): error C2039: “ui”: 不是“Netdemo”的成员
  d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(14): note: 参见“Netdemo”的声明
Camerathread.cpp(14): error C2228: “.rtsp”的左边必须有类/结构/联合
Camerathread.cpp(14): error C2227: “->text”的左边必须指向类/结构/联合/泛型类型
Camerathread.cpp(14): error C2228: “.toStdString”的左边必须有类/结构/联合
Camerathread.cpp(24): error C2027: 使用了未定义类型“QDebug”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyleoption.h(61): note: 参见“QDebug”的声明
Camerathread.cpp(24): error C2678: 二进制“<<”: 没有找到接受“QDebug”类型的左操作数的运算符(或没有可接受的转换)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyleoption.h(750): note: 可能是“QDebug operator <<(QDebug,const QStyleOption &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyleoption.h(749): note: 或  “QDebug operator <<(QDebug,const QStyleOption::OptionType &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyle.h(872): note: 或  “QDebug operator <<(QDebug,QStyle::State)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(226): note: 或  “QDebug operator <<(QDebug,const QRegularExpressionMatch &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(168): note: 或  “QDebug operator <<(QDebug,QRegularExpression::PatternOptions)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(167): note: 或  “QDebug operator <<(QDebug,const QRegularExpression &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(162): note: 或  “QDataStream &operator <<(QDataStream &,const QRegularExpression &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qitemselectionmodel.h(291): note: 或  “QDebug operator <<(QDebug,const QItemSelectionRange &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qabstractitemmodel.h(144): note: 或  “QDebug operator <<(QDebug,const QPersistentModelIndex &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qabstractitemmodel.h(96): note: 或  “QDebug operator <<(QDebug,const QModelIndex &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qlocale.h(1090): note: 或  “QDebug operator <<(QDebug,const QLocale &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qlocale.h(1085): note: 或  “QDataStream &operator <<(QDataStream &,const QLocale &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qcoreapplication.h(269): note: 或  “QDebug operator <<(QDebug,const MSG &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qaction.h(214): note: 或  “QDebug operator <<(QDebug,const QAction *)” (编译源文件 Camerathread.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(859): note: 或  “QDebug operator <<(QDebug,const QVariant::Type)” (编译源文件 Camerathread.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(542): note: 或  “QDataStream &operator <<(QDataStream &,const QVariant::Type)” (编译源文件 Camerathread.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(540): note: 或  “QDataStream &operator <<(QDataStream &,const QVariant &)” (编译源文件 Camerathread.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(452): note: 或  “QDebug operator <<(QDebug,const QVariant &)” (编译源文件 Camerathread.cpp)
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C3646: “ui”: 未知重写说明符 (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qicon.h(146): note: 或  “QDebug operator <<(QDebug,const QIcon &)” (编译源文件 Camerathread.cpp)
d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(49): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qicon.h(129): note: 或  “QDataStream &operator <<(QDataStream &,const QIcon &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qwidget.h(864): note: 或  “QDebug operator <<(QDebug,const QWidget *)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qkeysequence.h(229): note: 或  “QDebug operator <<(QDebug,const QKeySequence &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qkeysequence.h(58): note: 或  “QDataStream &operator <<(QDataStream &,const QKeySequence &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcursor.h(128): note: 或  “QDebug operator <<(QDebug,const QCursor &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcursor.h(123): note: 或  “QDataStream &operator <<(QDataStream &,const QCursor &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qsizepolicy.h(176): note: 或  “QDebug operator <<(QDebug,const QSizePolicy &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qsizepolicy.h(143): note: 或  “QDataStream &operator <<(QDataStream &,const QSizePolicy &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qfont.h(356): note: 或  “QDebug operator <<(QDebug,const QFont &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qfont.h(317): note: 或  “QDataStream &operator <<(QDataStream &,const QFont &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpalette.h(210): note: 或  “QDebug operator <<(QDebug,const QPalette &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpalette.h(188): note: 或  “QDataStream &operator <<(QDataStream &,const QPalette &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qbrush.h(149): note: 或  “QDebug operator <<(QDebug,const QBrush &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qbrush.h(144): note: 或  “QDataStream &operator <<(QDataStream &,const QBrush &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpixmap.h(248): note: 或  “QDebug operator <<(QDebug,const QPixmap &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpixmap.h(243): note: 或  “QDataStream &operator <<(QDataStream &,const QPixmap &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qimage.h(482): note: 或  “QDebug operator <<(QDebug,const QImage &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qimage.h(477): note: 或  “QDataStream &operator <<(QDataStream &,const QImage &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qtransform.h(372): note: 或  “QDebug operator <<(QDebug,const QTransform &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qtransform.h(367): note: 或  “QDataStream &operator <<(QDataStream &,const QTransform &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(373): note: 或  “QDebug operator <<(QDebug,const QPainterPath &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(229): note: 或  “QDataStream &operator <<(QDataStream &,const QPainterPath &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qmatrix.h(189): note: 或  “QDebug operator <<(QDebug,const QMatrix &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qmatrix.h(184): note: 或  “QDataStream &operator <<(QDataStream &,const QMatrix &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(428): note: 或  “QDataStream &operator <<(QDataStream &,const QLineF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(424): note: 或  “QDebug operator <<(QDebug,const QLineF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(207): note: 或  “QDataStream &operator <<(QDataStream &,const QLine &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(203): note: 或  “QDebug operator <<(QDebug,const QLine &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qregion.h(193): note: 或  “QDebug operator <<(QDebug,const QRegion &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qregion.h(159): note: 或  “QDataStream &operator <<(QDataStream &,const QRegion &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qiodevice.h(186): note: 或  “QDebug operator <<(QDebug,QIODevice::OpenMode)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(191): note: 或  “QDataStream &operator <<(QDataStream &,const QPolygonF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(184): note: 或  “QDebug operator <<(QDebug,const QPolygonF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(114): note: 或  “QDataStream &operator <<(QDataStream &,const QPolygon &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(107): note: 或  “QDebug operator <<(QDebug,const QPolygon &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcolor.h(60): note: 或  “QDataStream &operator <<(QDataStream &,const QColor &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcolor.h(57): note: 或  “QDebug operator <<(QDebug,const QColor &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(913): note: 或  “QDebug operator <<(QDebug,const QRectF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(636): note: 或  “QDataStream &operator <<(QDataStream &,const QRectF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(507): note: 或  “QDebug operator <<(QDebug,const QRect &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(176): note: 或  “QDataStream &operator <<(QDataStream &,const QRect &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(386): note: 或  “QDebug operator <<(QDebug,const QSizeF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(276): note: 或  “QDataStream &operator <<(QDataStream &,const QSizeF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(211): note: 或  “QDebug operator <<(QDebug,const QSize &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(108): note: 或  “QDataStream &operator <<(QDataStream &,const QSize &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(487): note: 或  “QDebug operator <<(QDebug,const QMarginsF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(327): note: 或  “QDataStream &operator <<(QDataStream &,const QMarginsF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(278): note: 或  “QDebug operator <<(QDebug,const QMargins &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(94): note: 或  “QDataStream &operator <<(QDataStream &,const QMargins &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(406): note: 或  “QDebug operator <<(QDebug,const QPointF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(277): note: 或  “QDataStream &operator <<(QDataStream &,const QPointF &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(212): note: 或  “QDebug operator <<(QDebug,const QPoint &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(112): note: 或  “QDataStream &operator <<(QDataStream &,const QPoint &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qobject.h(526): note: 或  “QDebug operator <<(QDebug,const QObject *)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregexp.h(129): note: 或  “QDebug operator <<(QDebug,const QRegExp &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregexp.h(124): note: 或  “QDataStream &operator <<(QDataStream &,const QRegExp &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qstring.h(1369): note: 或  “QDataStream &operator <<(QDataStream &,const QString &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qbytearray.h(678): note: 或  “QDataStream &operator <<(QDataStream &,const QByteArray &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qchar.h(594): note: 或  “QDataStream &operator <<(QDataStream &,QChar)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/utility.hpp(413): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::TickMeter &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(260): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::MatSize &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(181): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::UMat &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(175): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::Mat &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(166): note: 或  “std::ostream &cv::operator <<(std::ostream &,cv::Ptr<cv::Formatted>)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(160): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::String &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core.hpp(3038): note: 或  “cv::String &cv::operator <<(cv::String &,const cv::Mat &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core.hpp(3029): note: 或  “cv::String &cv::operator <<(cv::String &,cv::Ptr<cv::Formatted>)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(1201): note: 或  “cv::FileStorage &cv::operator <<(cv::FileStorage &,char *)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(1193): note: 或  “cv::FileStorage &cv::operator <<(cv::FileStorage &,const char *)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(789): note: 或  “cv::FileStorage &cv::operator <<(cv::FileStorage &,const cv::String &)” (编译源文件 Camerathread.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(1178): note: 或  “cv::FileStorage &cv::operator <<<char[5]>(cv::FileStorage &,const _Tp (&))”
          with
          [
              _Tp=char [5]
          ] (编译源文件 Camerathread.cpp)
  Camerathread.cpp(24): note: 尝试匹配参数列表“(QDebug, const char [5])”时
Camerathread.cpp(25): error C2664: “int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT)”: 无法将参数 2 从“const char [21]”转换为“LPCWSTR”
  Camerathread.cpp(25): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Camerathread.cpp(26): error C2039: “ui”: 不是“Netdemo”的成员
  d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(14): note: 参见“Netdemo”的声明
Camerathread.cpp(26): error C2228: “.stop2”的左边必须有类/结构/联合
Camerathread.cpp(26): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
Camerathread.cpp(30): error C2039: “ui”: 不是“Netdemo”的成员
  d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(14): note: 参见“Netdemo”的声明
Camerathread.cpp(30): error C2228: “.stop2”的左边必须有类/结构/联合
Camerathread.cpp(30): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
Camerathread.cpp(41): error C2039: “ui”: 不是“Netdemo”的成员
  d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(14): note: 参见“Netdemo”的声明
Camerathread.cpp(41): error C2228: “.videolabel”的左边必须有类/结构/联合
Camerathread.cpp(41): error C2227: “->setPixmap”的左边必须指向类/结构/联合/泛型类型
Camerathread.cpp(49): error C2039: “ui”: 不是“Netdemo”的成员
  d:\c++test\qttest2\netdemo\netdemo\Netdemo.h(14): note: 参见“Netdemo”的声明
Camerathread.cpp(49): error C2228: “.stop2”的左边必须有类/结构/联合
Camerathread.cpp(49): error C2227: “->setText”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(17): error C2027: 使用了未定义类型“QTimer”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qwindowdefs.h(76): note: 参见“QTimer”的声明
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qwindowdefs.h(76): note: 参见“QTimer”的声明 (编译源文件 Netdemo.cpp)
Netdemo.cpp(18): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(18): error C2228: “.setupUi”的左边必须有类/结构/联合
  Netdemo.cpp(18): note: 类型是“unknown-type”
Netdemo.cpp(19): error C2664: “QMetaObject::Connection QObject::connect(const QObject *,const char *,const char *,Qt::ConnectionType) const”: 无法将参数 1 从“QTimer *”转换为“const QObject *”
  Netdemo.cpp(19): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Netdemo.cpp(20): error C2027: 使用了未定义类型“QTimer”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qwindowdefs.h(76): note: 参见“QTimer”的声明
Netdemo.cpp(20): error C2227: “->start”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(21): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(21): error C2228: “.start”的左边必须有类/结构/联合
  Netdemo.cpp(21): note: 类型是“unknown-type”
Netdemo.cpp(22): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(22): error C2228: “.send”的左边必须有类/结构/联合
  Netdemo.cpp(22): note: 类型是“unknown-type”
Netdemo.cpp(24): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(24): error C2228: “.stop”的左边必须有类/结构/联合
  Netdemo.cpp(24): note: 类型是“unknown-type”
Netdemo.cpp(25): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(25): error C2228: “.copy”的左边必须有类/结构/联合
  Netdemo.cpp(25): note: 类型是“unknown-type”
Netdemo.cpp(26): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(26): error C2228: “.clear”的左边必须有类/结构/联合
  Netdemo.cpp(26): note: 类型是“unknown-type”
Netdemo.cpp(28): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(28): error C2228: “.stop2”的左边必须有类/结构/联合
  Netdemo.cpp(28): note: 类型是“unknown-type”
Netdemo.cpp(29): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(29): error C2228: “.copy2”的左边必须有类/结构/联合
  Netdemo.cpp(29): note: 类型是“unknown-type”
Netdemo.cpp(30): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(30): error C2228: “.Cal2”的左边必须有类/结构/联合
  Netdemo.cpp(30): note: 类型是“unknown-type”
Netdemo.cpp(50): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(50): error C2228: “.text”的左边必须有类/结构/联合
  Netdemo.cpp(50): note: 类型是“unknown-type”
Netdemo.cpp(50): error C2227: “->insertPlainText”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(51): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(51): error C2228: “.text”的左边必须有类/结构/联合
  Netdemo.cpp(51): note: 类型是“unknown-type”
Netdemo.cpp(51): error C2227: “->moveCursor”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(51): error C2653: “QTextCursor”: 不是类或命名空间名称
Netdemo.cpp(51): error C2065: “End”: 未声明的标识符
Netdemo.cpp(54): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(54): error C2228: “.text”的左边必须有类/结构/联合
  Netdemo.cpp(54): note: 类型是“unknown-type”
Netdemo.cpp(54): error C2227: “->insertPlainText”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(55): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(55): error C2228: “.text”的左边必须有类/结构/联合
  Netdemo.cpp(55): note: 类型是“unknown-type”
Netdemo.cpp(55): error C2227: “->moveCursor”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(55): error C2653: “QTextCursor”: 不是类或命名空间名称
Netdemo.cpp(55): error C2065: “End”: 未声明的标识符
Netdemo.cpp(65): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(65): error C2228: “.line1”的左边必须有类/结构/联合
  Netdemo.cpp(65): note: 类型是“unknown-type”
Netdemo.cpp(65): error C2227: “->replace”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(66): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(66): error C2228: “.line1”的左边必须有类/结构/联合
  Netdemo.cpp(66): note: 类型是“unknown-type”
Netdemo.cpp(66): error C2227: “->setPen”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(66): error C2027: 使用了未定义类型“QPen”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(59): note: 参见“QPen”的声明
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(59): note: 参见“QPen”的声明 (编译源文件 Netdemo.cpp)
Netdemo.cpp(67): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(67): error C2228: “.line2”的左边必须有类/结构/联合
  Netdemo.cpp(67): note: 类型是“unknown-type”
Netdemo.cpp(67): error C2227: “->replace”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(68): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(68): error C2228: “.line2”的左边必须有类/结构/联合
  Netdemo.cpp(68): note: 类型是“unknown-type”
Netdemo.cpp(68): error C2227: “->setPen”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(68): error C2027: 使用了未定义类型“QPen”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(59): note: 参见“QPen”的声明
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(59): note: 参见“QPen”的声明 (编译源文件 Netdemo.cpp)
Netdemo.cpp(71): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(71): error C2228: “.chart”的左边必须有类/结构/联合
  Netdemo.cpp(71): note: 类型是“unknown-type”
Netdemo.cpp(71): error C2227: “->axisY”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(71): error C2227: “->setRange”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(73): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(73): error C2228: “.chart”的左边必须有类/结构/联合
  Netdemo.cpp(73): note: 类型是“unknown-type”
Netdemo.cpp(73): error C2227: “->axisX”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(73): error C2227: “->setRange”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(81): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(81): error C2228: “.chart”的左边必须有类/结构/联合
  Netdemo.cpp(81): note: 类型是“unknown-type”
Netdemo.cpp(81): error C2227: “->axisX”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(81): error C2227: “->setRange”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(88): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(88): error C2228: “.combo”的左边必须有类/结构/联合
  Netdemo.cpp(88): note: 类型是“unknown-type”
Netdemo.cpp(88): error C2227: “->currentText”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(92): error C2664: “int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT)”: 无法将参数 2 从“const char [17]”转换为“LPCWSTR”
  Netdemo.cpp(92): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Netdemo.cpp(94): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(94): error C2228: “.localaddress”的左边必须有类/结构/联合
  Netdemo.cpp(94): note: 类型是“unknown-type”
Netdemo.cpp(94): error C2227: “->text”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(94): error C2228: “.toStdString”的左边必须有类/结构/联合
Netdemo.cpp(101): error C2664: “int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT)”: 无法将参数 2 从“const char [14]”转换为“LPCWSTR”
  Netdemo.cpp(101): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Netdemo.cpp(104): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(104): error C2228: “.toaddress”的左边必须有类/结构/联合
  Netdemo.cpp(104): note: 类型是“unknown-type”
Netdemo.cpp(104): error C2227: “->text”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(104): error C2228: “.toStdString”的左边必须有类/结构/联合
Netdemo.cpp(113): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(113): error C2228: “.combo”的左边必须有类/结构/联合
  Netdemo.cpp(113): note: 类型是“unknown-type”
Netdemo.cpp(113): error C2227: “->currentText”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(116): error C2664: “int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT)”: 无法将参数 2 从“const char [17]”转换为“LPCWSTR”
  Netdemo.cpp(116): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Netdemo.cpp(119): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(119): error C2228: “.localaddress”的左边必须有类/结构/联合
  Netdemo.cpp(119): note: 类型是“unknown-type”
Netdemo.cpp(119): error C2227: “->text”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(119): error C2228: “.toStdString”的左边必须有类/结构/联合
Netdemo.cpp(126): error C2664: “int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT)”: 无法将参数 2 从“const char [14]”转换为“LPCWSTR”
  Netdemo.cpp(126): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Netdemo.cpp(130): error C2664: “int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT)”: 无法将参数 2 从“const char [13]”转换为“LPCWSTR”
  Netdemo.cpp(130): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Netdemo.cpp(133): error C2027: 使用了未定义类型“QDebug”
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyleoption.h(61): note: 参见“QDebug”的声明
Netdemo.cpp(133): error C2678: 二进制“<<”: 没有找到接受“QDebug”类型的左操作数的运算符(或没有可接受的转换)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyleoption.h(750): note: 可能是“QDebug operator <<(QDebug,const QStyleOption &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyleoption.h(749): note: 或  “QDebug operator <<(QDebug,const QStyleOption::OptionType &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qstyle.h(872): note: 或  “QDebug operator <<(QDebug,QStyle::State)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(226): note: 或  “QDebug operator <<(QDebug,const QRegularExpressionMatch &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(168): note: 或  “QDebug operator <<(QDebug,QRegularExpression::PatternOptions)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(167): note: 或  “QDebug operator <<(QDebug,const QRegularExpression &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregularexpression.h(162): note: 或  “QDataStream &operator <<(QDataStream &,const QRegularExpression &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qitemselectionmodel.h(291): note: 或  “QDebug operator <<(QDebug,const QItemSelectionRange &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qabstractitemmodel.h(144): note: 或  “QDebug operator <<(QDebug,const QPersistentModelIndex &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qabstractitemmodel.h(96): note: 或  “QDebug operator <<(QDebug,const QModelIndex &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qlocale.h(1090): note: 或  “QDebug operator <<(QDebug,const QLocale &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qlocale.h(1085): note: 或  “QDataStream &operator <<(QDataStream &,const QLocale &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qcoreapplication.h(269): note: 或  “QDebug operator <<(QDebug,const MSG &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qaction.h(214): note: 或  “QDebug operator <<(QDebug,const QAction *)” (编译源文件 Netdemo.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(859): note: 或  “QDebug operator <<(QDebug,const QVariant::Type)” (编译源文件 Netdemo.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(542): note: 或  “QDataStream &operator <<(QDataStream &,const QVariant::Type)” (编译源文件 Netdemo.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(540): note: 或  “QDataStream &operator <<(QDataStream &,const QVariant &)” (编译源文件 Netdemo.cpp)
  d:\myapp\qt\5.8\msvc2015_64\include\qtcore\qvariant.h(452): note: 或  “QDebug operator <<(QDebug,const QVariant &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qicon.h(146): note: 或  “QDebug operator <<(QDebug,const QIcon &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qicon.h(129): note: 或  “QDataStream &operator <<(QDataStream &,const QIcon &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qwidget.h(864): note: 或  “QDebug operator <<(QDebug,const QWidget *)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qkeysequence.h(229): note: 或  “QDebug operator <<(QDebug,const QKeySequence &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qkeysequence.h(58): note: 或  “QDataStream &operator <<(QDataStream &,const QKeySequence &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcursor.h(128): note: 或  “QDebug operator <<(QDebug,const QCursor &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcursor.h(123): note: 或  “QDataStream &operator <<(QDataStream &,const QCursor &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qsizepolicy.h(176): note: 或  “QDebug operator <<(QDebug,const QSizePolicy &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtWidgets/qsizepolicy.h(143): note: 或  “QDataStream &operator <<(QDataStream &,const QSizePolicy &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qfont.h(356): note: 或  “QDebug operator <<(QDebug,const QFont &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qfont.h(317): note: 或  “QDataStream &operator <<(QDataStream &,const QFont &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpalette.h(210): note: 或  “QDebug operator <<(QDebug,const QPalette &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpalette.h(188): note: 或  “QDataStream &operator <<(QDataStream &,const QPalette &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qbrush.h(149): note: 或  “QDebug operator <<(QDebug,const QBrush &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qbrush.h(144): note: 或  “QDataStream &operator <<(QDataStream &,const QBrush &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpixmap.h(248): note: 或  “QDebug operator <<(QDebug,const QPixmap &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpixmap.h(243): note: 或  “QDataStream &operator <<(QDataStream &,const QPixmap &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qimage.h(482): note: 或  “QDebug operator <<(QDebug,const QImage &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qimage.h(477): note: 或  “QDataStream &operator <<(QDataStream &,const QImage &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qtransform.h(372): note: 或  “QDebug operator <<(QDebug,const QTransform &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qtransform.h(367): note: 或  “QDataStream &operator <<(QDataStream &,const QTransform &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(373): note: 或  “QDebug operator <<(QDebug,const QPainterPath &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpainterpath.h(229): note: 或  “QDataStream &operator <<(QDataStream &,const QPainterPath &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qmatrix.h(189): note: 或  “QDebug operator <<(QDebug,const QMatrix &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qmatrix.h(184): note: 或  “QDataStream &operator <<(QDataStream &,const QMatrix &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(428): note: 或  “QDataStream &operator <<(QDataStream &,const QLineF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(424): note: 或  “QDebug operator <<(QDebug,const QLineF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(207): note: 或  “QDataStream &operator <<(QDataStream &,const QLine &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qline.h(203): note: 或  “QDebug operator <<(QDebug,const QLine &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qregion.h(193): note: 或  “QDebug operator <<(QDebug,const QRegion &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qregion.h(159): note: 或  “QDataStream &operator <<(QDataStream &,const QRegion &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qiodevice.h(186): note: 或  “QDebug operator <<(QDebug,QIODevice::OpenMode)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(191): note: 或  “QDataStream &operator <<(QDataStream &,const QPolygonF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(184): note: 或  “QDebug operator <<(QDebug,const QPolygonF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(114): note: 或  “QDataStream &operator <<(QDataStream &,const QPolygon &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qpolygon.h(107): note: 或  “QDebug operator <<(QDebug,const QPolygon &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcolor.h(60): note: 或  “QDataStream &operator <<(QDataStream &,const QColor &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtGui/qcolor.h(57): note: 或  “QDebug operator <<(QDebug,const QColor &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(913): note: 或  “QDebug operator <<(QDebug,const QRectF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(636): note: 或  “QDataStream &operator <<(QDataStream &,const QRectF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(507): note: 或  “QDebug operator <<(QDebug,const QRect &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qrect.h(176): note: 或  “QDataStream &operator <<(QDataStream &,const QRect &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(406): note: 或  “QDebug operator <<(QDebug,const QPointF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(277): note: 或  “QDataStream &operator <<(QDataStream &,const QPointF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(212): note: 或  “QDebug operator <<(QDebug,const QPoint &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qpoint.h(112): note: 或  “QDataStream &operator <<(QDataStream &,const QPoint &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(386): note: 或  “QDebug operator <<(QDebug,const QSizeF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(276): note: 或  “QDataStream &operator <<(QDataStream &,const QSizeF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(211): note: 或  “QDebug operator <<(QDebug,const QSize &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qsize.h(108): note: 或  “QDataStream &operator <<(QDataStream &,const QSize &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(487): note: 或  “QDebug operator <<(QDebug,const QMarginsF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(327): note: 或  “QDataStream &operator <<(QDataStream &,const QMarginsF &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(278): note: 或  “QDebug operator <<(QDebug,const QMargins &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qmargins.h(94): note: 或  “QDataStream &operator <<(QDataStream &,const QMargins &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qobject.h(526): note: 或  “QDebug operator <<(QDebug,const QObject *)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregexp.h(129): note: 或  “QDebug operator <<(QDebug,const QRegExp &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qregexp.h(124): note: 或  “QDataStream &operator <<(QDataStream &,const QRegExp &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qstring.h(1369): note: 或  “QDataStream &operator <<(QDataStream &,const QString &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qbytearray.h(678): note: 或  “QDataStream &operator <<(QDataStream &,const QByteArray &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\QT\5.8\msvc2015_64\include\QtCore/qchar.h(594): note: 或  “QDataStream &operator <<(QDataStream &,QChar)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/utility.hpp(413): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::TickMeter &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(260): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::MatSize &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(181): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::UMat &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(175): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::Mat &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(166): note: 或  “std::ostream &cv::operator <<(std::ostream &,cv::Ptr<cv::Formatted>)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/cvstd.inl.hpp(160): note: 或  “std::ostream &cv::operator <<(std::ostream &,const cv::String &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core.hpp(3038): note: 或  “cv::String &cv::operator <<(cv::String &,const cv::Mat &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core.hpp(3029): note: 或  “cv::String &cv::operator <<(cv::String &,cv::Ptr<cv::Formatted>)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(1201): note: 或  “cv::FileStorage &cv::operator <<(cv::FileStorage &,char *)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(1193): note: 或  “cv::FileStorage &cv::operator <<(cv::FileStorage &,const char *)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(789): note: 或  “cv::FileStorage &cv::operator <<(cv::FileStorage &,const cv::String &)” (编译源文件 Netdemo.cpp)
  D:\MYAPP\opencv3\Opencv3.4.2\Opencv3.4.2\Opencv_win\opencv\build\include\opencv2/core/persistence.hpp(1178): note: 或  “cv::FileStorage &cv::operator <<<char[13]>(cv::FileStorage &,const _Tp (&))”
          with
          [
              _Tp=char [13]
          ] (编译源文件 Netdemo.cpp)
  Netdemo.cpp(133): note: 尝试匹配参数列表“(QDebug, const char [13])”时
Netdemo.cpp(137): error C2664: “int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT)”: 无法将参数 2 从“const char [11]”转换为“LPCWSTR”
  Netdemo.cpp(137): note: 与指向的类型无关；转换要求 reinterpret_cast、C 样式转换或函数样式转换
Netdemo.cpp(147): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(147): error C2228: “.start”的左边必须有类/结构/联合
  Netdemo.cpp(147): note: 类型是“unknown-type”
Netdemo.cpp(147): error C2227: “->setStyleSheet”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(155): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(155): error C2228: “.combo”的左边必须有类/结构/联合
  Netdemo.cpp(155): note: 类型是“unknown-type”
Netdemo.cpp(155): error C2227: “->currentText”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(157): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(157): error C2228: “.start”的左边必须有类/结构/联合
  Netdemo.cpp(157): note: 类型是“unknown-type”
Netdemo.cpp(157): error C2227: “->setStyleSheet”的左边必须指向类/结构/联合/泛型类型
Netdemo.cpp(166): error C2065: “ui”: 未声明的标识符
Netdemo.cpp(166): fatal error C1003: 错误计数超过 100；正在停止编译
